{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","sections/TopMenuSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","style","Component","DownIcon","onClick","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","TitlesSection","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","color","changeColor","bind","assertThisInitialized","setState","_this2","lib_default","modules","name","src_components_Fullpage","backgroundColor","bgcolor","onMouseOver","onMouseLeave","data","title","subtitle","keys","links","map","key","react_social_icons","url","target","activeClass","to","spy","smooth","offset","duration","delay","components_DownIcon","icons","down","console","log","AboutSection","sections","items","p","content","SkillCard","skill","image","eachSkill","src_components_SkillCard","TopMenuSection","App","titleSectionColor","colors","aboutSectionColor","skillSectionColor","i","indexOf","j","k","n","length","src_sections_TopMenuSection","src_sections_TitlesSection","src_sections_AboutSection","sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faf0aa53.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Fullpage.css'\n\nclass Fullpage extends Component {\n    render() {\n        const { children } = this.props\n        return (\n            <div className={`fullpage ${this.props.className || ''}`}\n                 style={this.props.style}\n            >\n                {children}\n            </div>\n        )\n    }\n}\n\nexport default Fullpage","import React, {Component} from \"react\";\n\nconst DownIcon = (props) => {\n    return (\n        <div\n        onClick={props.onClick}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginBottom: \"-34px\",\n          transform: \"translateY(-45px)\"\n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"30px\"\n          }}\n        >\n          <img src={props.icon} />\n        </div>\n      </div>\n    )\n}\n\nexport default DownIcon","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport { SocialIcon } from \"react-social-icons\";\nimport \"./TitlesSection.css\";\nimport DownIcon from \"../components/DownIcon\";\nimport { Link, Element } from \"react-scroll\";\nimport SnowStorm from \"react-snowstorm\";\n\nclass TitlesSection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      color: \"white\"\n    };\n\n    this.changeColor = this.changeColor.bind(this);\n  }\n\n  changeColor() {\n    this.setState({\n      color: this.state.color === \"white\" ? \"yellow\" : \"white\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <SnowStorm />\n        <Element name=\"home\" className=\"element\" />\n        <Fullpage\n          className=\"first\"\n          style={{\n            backgroundColor: this.props.bgcolor\n          }}\n        >\n          <h1\n            className=\"title\"\n            style={{\n              color: this.state.color\n            }}\n            onMouseOver={this.changeColor}\n            onMouseLeave={() => {\n              this.changeColor();\n            }}\n          >\n            {data.title}\n          </h1>\n          <div>\n            <h2>{data.subtitle}</h2>\n          </div>\n          <div className=\"icons-wrapper\">\n            {Object.keys(data.links).map(key => {\n              return (\n                <div className=\"icon\">\n                  <SocialIcon url={data.links[key]} target=\"_blank\" />\n                </div>\n              );\n            })}\n          </div>\n        </Fullpage>\n        <Link\n          activeClass=\"active\"\n          to=\"about\"\n          spy={true}\n          smooth={true}\n          offset={0}\n          duration={500}\n          delay={0}\n        >\n          <DownIcon\n            icon={data.icons.down}\n            onClick={() => console.log(\"im working\")}\n          />\n        </Link>\n        <Element name=\"about\" className=\"element\" />\n      </div>\n    );\n  }\n}\n\nexport default TitlesSection;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport './AboutSection.css'\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <Fullpage className=\"second\"\n        style={{\n          backgroundColor: this.props.bgcolor\n        }}\n      >\n        <h3>{data.sections[0].title}</h3>\n        <div>\n          {data.sections[0].items.map(p => {\n            return <p>{p.content}</p>;\n          })}\n        </div>\n      </Fullpage>\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nclass SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n        <div className=\"image-wrapper\">\n          <img src={skill.content.image} />\n        </div>\n        <div className=\"skill-title-wrapper\">\n          <h4>{skill.content.title}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillCard;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport SkillCard from \"../components/SkillCard\";\nimport { Link, Element } from \"react-scroll\";\n\nimport \"./SkillSection.css\";\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <Fullpage\n        className=\"third\"\n        style={{\n          backgroundColor: this.props.bgcolor\n        }}\n      >\n        <Element name=\"skill\" className=\"element\" />\n        <h3>{data.sections[1].title}</h3>\n        <div className=\"cards-wrapper\">\n          {data.sections[1].items.map(eachSkill => {\n            return <SkillCard skill={eachSkill} />;\n          })}\n        </div>\n      </Fullpage>\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\nimport \"./TopMenuSection.css\";\nimport { Link, Element } from \"react-scroll\";\n\nclass TopMenuSection extends Component {\n  render() {\n    return (\n      <div className=\"top-menu\">\n        <div className=\"menu-item\">\n          <a onClick={this.props.changeColor}>Color</a>\n        </div>\n\n        <div className=\"menu-item\">\n          <Link\n            activeClass=\"active\"\n            to=\"home\"\n            spy={true}\n            smooth={true}\n            offset={0}\n            duration={500}\n            delay={0}\n          >\n            Home\n          </Link>\n\n          <Link\n            activeClass=\"active\"\n            to=\"about\"\n            spy={true}\n            smooth={true}\n            offset={0}\n            duration={500}\n            delay={0}\n          >\n            About\n          </Link>\n\n          <Link\n            activeClass=\"active\"\n            to=\"skill\"\n            spy={true}\n            smooth={true}\n            offset={0}\n            duration={500}\n            delay={0}\n          >\n            Skills\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TopMenuSection;\n","import React, { Component } from \"react\";\n\nimport TitlesSection from \"./sections/TitlesSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport TopMenuSection from \"./sections/TopMenuSection\";\n\nimport data from \"./data.json\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    titleSectionColor: data.colors[0],\n    aboutSectionColor: data.colors[1],\n    skillSectionColor: data.colors[2]\n  }\n\n  changeColor = () => {   \n    let i=data.colors.indexOf(this.state.titleSectionColor);\n    let j=data.colors.indexOf(this.state.aboutSectionColor);\n    let k=data.colors.indexOf(this.state.skillSectionColor);\n    let n=data.colors.length;    \n\n    this.setState({\n      titleSectionColor: data.colors[i+1 < n ? i+1 : 0],\n      aboutSectionColor: data.colors[j+1 < n ? j+1 : 0],\n      skillSectionColor: data.colors[k+1 < n ? k+1 : 0]\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"navigation\" />\n        <TopMenuSection changeColor={this.changeColor} />\n        <TitlesSection bgcolor={this.state.titleSectionColor} />\n        <AboutSection bgcolor={this.state.aboutSectionColor} />\n        <SkillSection bgcolor={this.state.skillSectionColor} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}